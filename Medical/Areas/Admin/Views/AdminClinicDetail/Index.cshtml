@model Medical.ViewModel.CClinicDetailViewModel

@{ ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Admin_Layout.cshtml";
}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-9">
            <div class="card card-primary">
                <div class="card-body p-0">
                    <div id="calendar"></div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script>
            $(function () {
                var total;
                fetch("@Url.Content("~/Admin/AdminClinicDetail/loadData")")
                    .then(
                        (respone) => {
                            return respone.text();
                        })
                    .then(
                        (datas) => {
                            let eventList = [];
                            let data = datas.split('#');

                            for (var i = 0, len = data.length; i < len; i++) {
                                var ii = data[i].split(',');
                                let dt = new Date(ii[2]);
                                let dtTo = new Date(moment(dt).add(3, 'hours').format("yyyy/MM/DD HH:00:00"));
                                let color ;

                                if (dt.getHours = 9) {
                                    color = '#0073b7'
                                } else if (dt.getHours = 13) {
                                    color = '#FBBC05'
                                } else {
                                    color = '#34A853'
                                }

                                var item = {
                                    id: ii[0],
                                    title: ii[1],
                                    start: dt,
                                    end: dtTo,
                                    backgroundColor: color,
                                    borderColor: color,
                                    extendedProps: {
                                        room: ii[3],
                                        period: ii[4]
                                    }
                                };
                                eventList.push(item);
                            }
                            return eventList;
                        })
                    .then(
                        (list) => {

                            /* initialize the external events
                             * -----------------------------------------------------------------*/
                            function ini_events(ele) {
                                ele.each(function () {
                                    fetch("@Url.Content("~/Admin/AdminClinicDetail/loadData")")
                                        .then(
                                            (respone) => {
                                                return respone.text();
                                            })
                                        .then((d) => {
                                            count = parseInt(d, 10) + 1;
                                            total = count;
                                                return count;
                                            })
                                        .then((count) => {
                                            // create an Event Object (https://fullcalendar.io/docs/event-object)
                                            // it doesn't need to have a start or end
                                            var eventObject = {
                                                id: count,
                                                title: $.trim($(this).text()) // use the element's text as the event title
                                            }

                                            // store the Event Object in the DOM element so we can get to it later
                                            $(this).data('eventObject', eventObject)

                                            // make the event draggable using jQuery UI
                                            $(this).draggable({
                                                zIndex: 1070,
                                                revert: true, // will cause the event to go back to its
                                                revertDuration: 0  //  original position after the drag
                                            })
                                        }
                                    )
                                })
                            }

                            ini_events($('#external-events div.external-event'))

                            /* initialize the calendar
                             -----------------------------------------------------------------*/
                            //Date for the calendar events (dummy data)
                            var date = new Date()


                            var Calendar = FullCalendar.Calendar;
                            var Draggable = FullCalendar.Draggable;

                            var containerEl = document.getElementById('external-events');
                            var checkbox = document.getElementById('drop-remove');
                            var calendarEl = document.getElementById('calendar');

                            // initialize the external events
                            // -----------------------------------------------------------------

                            new Draggable(containerEl, {
                                itemSelector: '.external-event',
                                eventData: function (eventEl) {
                                    updateToServer(eventEl);
                                    return {
                                        title: eventEl.innerText,
                                        backgroundColor: window.getComputedStyle(eventEl, null).getPropertyValue('background-color'),
                                        borderColor: window.getComputedStyle(eventEl, null).getPropertyValue('background-color'),
                                        textColor: window.getComputedStyle(eventEl, null).getPropertyValue('color'),
                                    };
                                }
                            });

                            var calendar = new Calendar(calendarEl, {
                                headerToolbar: {
                                    left: 'prev,next today',
                                    center: 'title',
                                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                                },
                                themeSystem: 'bootstrap',
                                /*timeZone: 'Asia/Taipei',*/
                                events: list,
                                editable: true,
                                droppable: true, // this allows things to be dropped onto the calendar !!!
                                drop: function (info) {
                                    // is the "remove after drop" checkbox checked?
                                    if (checkbox.checked) {
                                        // if so, remove the element from the "Draggable Events" list
                                        info.draggedEl.parentNode.removeChild(info.draggedEl);
                                    }
                                },
                                eventDrop: function (info, revertFunc) {
                                    alert(info.event.title + " 移至 " + moment(info.event.start).format("YYYY/MM/DD"));
                                    updateToServer(info);

                                    //if (!confirm("Are you sure about this change?")) {
                                    //    revertFunc();
                                    //}
                                }
                            });


                            calendar.render();
                            // $('#calendar').fullCalendar()

                            /* ADDING EVENTS */
                            var currColor = '#3c8dbc' //Red by default
                            // Color chooser button

                            $('#color-chooser > li > a').click(function (e) {
                                e.preventDefault()
                                // Save color
                                currColor = $(this).css('color')
                                // Add color effect to button
                                $('#add-new-event').css({
                                    'background-color': currColor,
                                    'border-color': currColor
                                })
                            })

                            $('#add-new-event').click(function (e) {
                                e.preventDefault()
                                // Get value and make sure it is not null
                                var val = $('#doctorlist').val();
                                var val2 = $('#periodlist option:selected');
                                var val3 = $('#roomlist option:selected');
                                if (val.length == 0) {
                                    return
                                }
                                // Create events
                                var event = $('<div />')
                                event.css({
                                    'background-color': currColor,
                                    'border-color': currColor,
                                    'color': '#fff'
                                }).addClass('external-event')
                                event.text(`${val} - ${val2.text()} - ${val3.text()}`)
                                $('#external-events').prepend(event)

                                // Add draggable funtionality
                                ini_events(event)

                                // Remove event from text input
                                //$('#new-event').val('')
                            })
                        }
                    );

                loadDoctors();

                const selDoctor = document.querySelector("#doctorlist");
                const selPeriod = document.querySelector("#periodlist");
                const selRoom = document.querySelector("#roomlist");

                async function loadDoctors() {
                    let count = 0;
                    const response = await fetch('@Url.Content("~/Admin/AdminClinicDetail/doctorList")');
                    const datas = await response.json();
                    datas.forEach(city => {
                        const opt = new Option(city, city);
                        selDoctor.options.add(opt);
                    });
                }

                 function updateToServer(info) {
                    const list = {
                        id: info.event.id,
                        doctor: info.event.title,
                        period: info.event.extendedProps.period,
                        room: info.event.extendedProps.room,
                        date: moment(info.event.start).format("YYYY/MM/DD/HH/mm/ss")
                    };

                    $.post('@Url.Content("~/Admin/AdminClinicDetail/Method")', list);
                }

                @*async function loadRooms() {
                    const response = await fetch('@Url.Content("~/Admin/AdminClinicDetail/roomList")');
                    const datas = await response.json();
                    let count = 0;
                    datas.forEach(city => {
                        //new Option(text,val)
                        const opt = new Option(city, count);
                        selDoctor.options.add(opt);
                        count++;
                    });
                }*@

            })








        $(function () {
            
            var date = new Date()
            var d = date.getDate(),
                m = date.getMonth(),
                y = date.getFullYear()


            var Calendar = FullCalendar.Calendar;
            var calendarEl = document.getElementById('calendar');

            fetch("@Url.Content("~/Admin/AdminClinicDetail/loadData")")
                .then(
                        (respone) => {
  
                         var calendar = new Calendar(calendarEl, {
                            headerToolbar: {
                                left: 'prev,next today',
                                center: 'title',
                                right: 'dayGridMonth,timeGridWeek,timeGridDay'
                            },
                             themeSystem: 'bootstrap',
                             events: respone,
                            editable: true,
                            droppable: true,
                            drop: function (info) {

                            }
                        });

                        calendar.render();
                    })
        })

        async function loadDoctors() {
            let count = 0;
            const response = await fetch('@Url.Content("~/Admin/AdminClinicDetail/doctorList")');
            const datas = await response.json();

            datas.forEach(city => {
                const opt = new Option(city, city);
                selDoctor.options.add(opt);
            })
        }

        function updateToServer(info) {

            const list = {
                id: info.event.id,
                doctor: info.event.title,
                period: info.event.extendedProps.period,
                room: info.event.extendedProps.room,
                date: moment(info.event.start).format("YYYY/MM/DD/HH/mm/ss")
            }

            $.post('@Url.Content("~/Admin/AdminClinicDetail/Method")', list)
        }
    </script>
}
