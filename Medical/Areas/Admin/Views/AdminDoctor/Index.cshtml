@model IEnumerable<Medical.Models.Doctor>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, AuthoringTagHelpers
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Admin_Layout.cshtml";
}
@section styles{
    <style>
        .input-selector {
            outline: none;
            border: none;
        }

        .muti-selector {
            width: max-content;
            float: left;
            padding-right: 4px
        }

        .select-field {
            border: 1px solid black;
        }

        .select-field, .task, .list {
            width: 100%;
            background-color: white;
        }

        .list {
            box-shadow: 0px 30px 60px rgb(0,0,0,0.2);
            display: none;
            position: absolute;
            width: 207.75px;
            z-index: 10;
        }

        .down-arrow {
            font-size: 1.2rem;
            cursor: pointer;
            display: inline-block;
            transition: 0.2s linear;
        }

        .task {
            display: block;
            padding-left: 0;
        }

            .task span {
                float: right;
                font-size: 0.6rem;
                padding-top: 6px;
            }

                .task span:hover {
                    background-color: aliceblue;
                }

        .show {
            display: block;
        }

        .rotate180 {
            transform: rotate(180deg);
        }

        .detail {
            margin-left: 60px;
            margin-right: 60px;
        }

        .slideInUp {
            background-color: #616E83;
            border: 0.2px #666;
            border-radius: 25px 25px 25px 25px;
            margin: 10px 5px 10px 5px;
        }

        .icon {
            width: 16px;
            height: 16px;
            margin-bottom: 9px;
        }
    </style>
}
<h1>醫生後台</h1>

@using (Html.BeginForm())
{<div class="d-flex flex-wrap mt-2">
    <div class="muti-selector">
        <div class="select-field">
            <input type="text" name="" placeholder="篩選科別" class="input-selector" />
            <span class="down-arrow">&blacktriangledown;</span>

        </div>
        <div class="list">
            <label for="" class="task">
                <input type="checkbox" class="checkAll1" name="123" id="c" onclick="check_all()" />
                全選
            </label>
        </div>
    </div>
    <div class="muti-selector">
        <div class="select-field" id="select-field1">
            <input type="text" name="" placeholder="篩選醫生" class="input-selector" />
            <span class="down-arrow" id="down-arrow1">&blacktriangledown;</span>
        </div>
        <div class="list" id="list1">
            <label for="" class="task">
                <input type="checkbox" class="checkAll2" onclick="check_allDp()" id="d" />
                全選
            </label>
        </div>
    </div>
    @*<input id="txtKeyword" hidden="hidden" type="text" name="txtKeyword" value="" />*@
    @*<input type="submit" class="btn btn-primary" id="sub" value="查詢" />*@
    <a href="/Admin/AdminDoctor/CreateDetail" class="btn btn-success">新增醫生</a>
</div>



} 
@*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*@

@*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*@

<table class="table table-hover">
    <thead>
        <tr>
            <th>
                醫生編號
            </th>
            <th>
                醫生姓名
            </th>
            <th>
                科別
            </th>
            <th>
                學歷
            </th>
            <th>
                職位
            </th>

            <th>
                載入圖片
            </th>
            <th>
                管理
            </th>
        </tr>
    </thead>
    <tbody class="tbody">
        @*@{ int count = 0;
            foreach (var item in Model)
            {
                count++;
                <tr>
                    <td>
                        @count
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DoctorName)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Education)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.JobTitle)
                    </td>

                    <td>
                        <img width="100" height="100" src="~/images/@Html.DisplayFor(modelItem => item.PicturePath)" />
                    </td>
                    <td>
                        @Html.ActionLink("管理醫師評論", "DoctorRatinglist", new { id = item.DoctorId }, new { @class = "btn btn-primary" })
                        @Html.ActionLink("修改資料", "EditDetail", new { id = item.DoctorId }, new { @class = "btn btn-secondary" })
                        @Html.ActionLink("刪除", "Delete", new { id = item.DoctorId }, new { onclick = "return confirm('確定刪除?')", @class = "btn btn-danger" })
                    </td>
                </tr>
            }
        }*@
    </tbody>
</table>
@section Scripts{

    <script>
    @*網頁開始全選*@
        function firstCheck() {
            document.getElementById("c").checked = true;
        }
        function firstCheck1() {
            document.getElementById("d").checked = true;
        }
    @*網頁開始時執行*@
        loadDep();
        @* 醫生全選 *@
            function check_allDp() {
                var ckboxs = document.getElementsByClassName("check1")
                for (var i = 0; i < ckboxs.length; i++) {
                    ckboxs[i].checked = !ckboxs[i].checked;
                    if (ckboxs[i].checked == true)
                        loadWebDoc(ckboxs[i].name)
                    else
                        cancelWebDoc(ckboxs[i].name)
                }
        }
        @* 科別全選 *@
            function check_all() {
                var checkboxs = document.getElementsByClassName("check")
                for (var i = 0; i < checkboxs.length; i++) {
                    checkboxs[i].checked = !checkboxs[i].checked;
                    if (checkboxs[i].checked == true)
                        loadDoc(checkboxs[i].name);
                    else
                        cancelDoc(checkboxs[i].name);
                }
            }
    @* 專長全選 *@
        function check_all() {

            var checkboxs = document.getElementsByClassName("check")

            for (var i = 0; i < checkboxs.length; i++) {

                checkboxs[i].checked = !checkboxs[i].checked;
                if (checkboxs[i].checked == true)
                    loadDoc(checkboxs[i].name);
                else
                    cancelDoc(checkboxs[i].name);
            }
        }
    @* 刪除取消勾選 *@
        async function cancelDoc(N) {
                depName = N;
                const trtDs = await fetch('@Url.Content("~/Admin/AdminDoctor/Doc")' + `?depName=${depName}`).then(response => response.json());
                trtDs.forEach((DoctorName) => {
                    document.querySelector(`#${DoctorName}`).remove();
                    document.getElementById(`${DoctorName}Div`).remove();
                })
        }
    @*取消全選醫生Ajax*@
        async function cancelWebDoc(N) {
            dcName = N;
            const doctors = await fetch('@Url.Content("~/doctor/GetDoctorWeb")' + `?docName=${dcName}`).then(response => response.json());
            doctors.forEach((DoctorName) => {
                var div = document.getElementById(`${doctors[0].doctorName}Div`);
                div.remove()
            })
        }
    @*選單下拉*@
        document.querySelector('.select-field').addEventListener('click', () => {
        document.querySelector('.list').classList.toggle('show');
            document.querySelector('.down-arrow').classList.toggle('rotate180')

        })
        document.querySelector('#select-field1').addEventListener('click', () => {
            document.querySelector('#list1').classList.toggle('show');
            document.querySelector('#down-arrow1').classList.toggle('rotate180')
        })
    @*勾選專長*@
        function CCC() {
            if ($(event.target)[0].checked == true) {
                loadDoc($(event.target)[0].name);
            }
            else
                cancelDoc($(event.target)[0].name);
        }

    @*勾選醫生*@
        function DDD() {
            if ($(event.target)[0].checked == true) {
                loadWebDoc($(event.target)[0].name);
            }
            else
                cancelWebDoc($(event.target)[0].name)
        }

    @*讀取專長選單*@
        async function loadDep() {

            const deps = await fetch('@Url.Content("~/Admin/AdminDoctor/Dep")').then(response => response.json())
            deps.forEach((DeptName) => {
                name =`<label for="" class="task">
                <input type="checkbox" class="check" onclick="CCC()" id="${DeptName}" name="${DeptName}" value="${DeptName}"/>
                ${DeptName}
            </label>`;
                document.querySelector('.list').innerHTML += name;
            })
            firstCheck();
            check_all();
        }

    @*讀取TreatmentDetail*@
        async function loadDoc(N) {
                depName = N;
                const trtDs = await fetch('@Url.Content("~/Admin/AdminDoctor/Doc")' + `?depName=${depName}`).then(response => response.json());
                trtDs.forEach((DoctorName) => {
                    name = `<label for="" class="task" id="${DoctorName}">
                <input type="checkbox" class="check1" checked="true" name="${DoctorName}" onclick="DDD()" value="${DoctorName}"/>
                ${DoctorName}
            </label>`;
                    document.querySelector('#list1').innerHTML += name;
                    loadWebDoc(`${DoctorName}`)
                })
            firstCheck1()
        }

        async function loadWebDoc(dcname) {
            const doctors = await fetch('@Url.Content("~/Admin/AdminDoctor/DocWeb")' + `?docName=${dcname}`).then(response => response.json());
            count = 0
            doctors.forEach((DoctorName) => {
                count++
                web = `<tr id="${doctors[0].doctorName}Div">
                    <td>
                        ${count}
                    </td>
                    <td>
                        ${doctors[0].doctorName}
                    </td>
                    <td class="${doctors[0].doctorName}">
                    </td>
                    <td>
                        ${doctors[0].education}
                    </td>
                    <td>
                        ${doctors[0].jobTitle}
                    </td>

                    <td>
                        <img width="100" height="100" src="/images/${doctors[0].picturePath}" />
                    </td>
                    <td>
                        <a class = "btn btn-primary" href="/Admin/AdminDoctor/DoctorRatingList/${doctors[0].doctorId}">管理醫師評論</a>
                        <a class = "btn btn-secondary" href="/Admin/AdminDoctor/EditDetail/${doctors[0].doctorId}">修改資料</a>
                        <a class = "btn btn-danger" onclick = "return confirm('確定刪除?')" href="/Admin/AdminDoctor/Delete/${doctors[0].doctorId}">刪除</a>
                    </td>
                </tr>`
                document.querySelector('.tbody').innerHTML += web
                loadWebDep(doctors[0].doctorName)
            })

        }
        async function loadWebDep(dcName) {
            const dep = await fetch('@Url.Content("~/doctor/GetDepartment")' + `?dcName=${dcName}`).then(response => response.json());
            web = dep[0]
            document.querySelector(`.${dcName}`).innerHTML += web;
        }

    </script>
}
